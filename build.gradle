plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "edu.wpi.first.GradleRIO" version "2019.0.0-alpha-3"
}

def TEAM = 4450
def ROBOT_CLASS = "Team4450.Robot11.Robot"

build.finalizedBy 'deploy'

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", edu.wpi.first.gradlerio.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcJava', edu.wpi.first.gradlerio.frc.FRCJavaArtifact) {
            targets << "roborio"
        }
   }
}

// Setup eclipse classpath settings, so the javadoc and sources are available in eclipse
eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

// Look in local maven cache first, then maven central, then jitpack for dependent libraries.
repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://jitpack.io' }
}

// Defining dependencies. In this case, WPILib (+ friends), CTRE Phoenix (Talon SRX), NavX, RobotLib
// and the local pathfinder project jar. RobotLib is downloaded from Jitpack by version number or commit id. 
// Change 'local' to desired RobotLib version, commit id or master-SNAPSHOT for most recent.
dependencies {
    compile wpilib()
    compile "com.github.ORF-4450:RobotLib:local"
    //compile files("C:\\Users\\rcorn\\wpilib\\user\\RobotLib\\RobotLib.jar")
    compile files("C:\\Users\\rcorn\\wpilib\\user\\RobotLib\\Pathfinder-java-1.8.jar")
    compile "org.joml:joml:1.9.12"
}

def branch = { ->
    def stdout = new ByteArrayOutputStream()
    
    exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdout
    }
    
    return stdout.toString().trim()
}

def hash = { ->
    def stdout = new ByteArrayOutputStream()
    
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    
    return stdout.toString().trim()
}

// Setting up robot program Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class. Add version information to jar manifest.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
        
        manifest {
         	attributes("Branch": branch())
        	attributes("Commit": hash())
           	attributes("Time": new Date().format("yyyy-MM-dd HH:mm:ss"))
        	attributes("User": System.getProperty("user.name"))
    	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}
